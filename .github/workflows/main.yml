name: My Pipeline
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.16.1'
      - name: Checkout repository
        uses: actions/checkout@v3
        
To upload and download artifacts in GitHub Actions, you can use the actions/upload-artifact and actions/download-artifact actions. Here's an example of how you can modify your workflow to upload the CodeQL analysis results as an artifact and then download it:

yaml
Copy code
name: CodeQL Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: codeql-results
          path: ${{github.workspace}}/qlpacks/codeql-go/analysis-results

      - name: Download results
        uses: actions/download-artifact@v2
        with:
          name: codeql-results
          path: artifacts/
      
      - name: Checkov scan
        uses: bridgecrewio/checkov-action@master
        with:
          skip_check: CKV2_GHA_1
#         with:
#           github_token: ${{ secrets.vs1 }}      
          
      - name: Initialize Go module
        run: go mod init github.com/ViktorijaEl/new-m
      - name: Install dependencies
        run: go get -v -t -d ./...
      - name: Run tests
        run: go test -v ./...
   
      - name: Terraform
        run: |
          terraform init
          terraform validate
          
      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
      
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ secrets.vs1 }}
          
      - name: Helm lint
        run: helm lint .
