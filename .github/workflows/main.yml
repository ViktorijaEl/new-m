name: My Pipeline

on:
  push:
    branches: [main]

env:
  APP_ID: ${{ secrets.APP_ID }}
  APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Get dependencies
        run: |
          go mod download
          go get -u github.com/gorilla/mux
          go mod tidy
          
      - name: Build
        run: |
          cd my-app-vs-app-auth
          ls -al
          go mod tidy
          go build .

      - name: Test
        run: |
          cd my-app-vs-app-auth
          ls -al
          go test -v ./...

      - name: Download repository
        uses: actions/checkout@v2
        with:
          repository: ViktorijaEl/new-m
          ref: main

      - name: Authenticate with GitHub App
        run: |
          go run my-app-vs-app-auth/main.go -app-id ${{ env.APP_ID }} -private-key "${{ env.APP_PRIVATE_KEY }}"
        env:
          APP_ID: ${{ secrets.APP_ID }}
          APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Upload CodeQL results
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results
          path: /home/runner/work/new-m/results/go.sarif

      - name: Checkov scan
        uses: bridgecrewio/checkov-action@master

      - name: Terraform
        run: |
          terraform init
          terraform validate

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ secrets.vs1 }}

      - name: Helm lint
        run: helm lint .
